package пакКоорд

// модКоордИзм

/*
	Модуль описывает тип с изменяемыми координатами
*/

import (
	мФмт "fmt"

	мСн "github.com/prospero78/goOC/пакОберон/пакСтрНомер"
	мСп "github.com/prospero78/goOC/пакОберон/пакСтрПоз"
)

//ИКоордИзм -- интерфейс для изменяемых координат
type ИКоордИзм interface {
	СтрНомер() мСн.ИСтрНомерИзм
	СтрПоз() мСп.ИСтрПозИзм
}

//тКоордИзм -- тип для изменяемых координат
type тКоордИзм struct {
	стр мСн.ИСтрНомерИзм
	поз мСп.ИСтрПозИзм
}

//КоордИзмНов -- возвращает новый экземпляр изменяемых координат
func КоордИзмНов(пСтр мСн.ССтрНомер, пПоз мСп.ССтрПоз) (ки ИКоордИзм, ош error) {
	_коорд := &тКоордИзм{}
	if _коорд == nil {
		return nil, мФмт.Errorf("КоордИзмНов(): нет памяти на новые изменяемые координаты?\n")
	}
	if _коорд.стр, ош = мСн.СтрНомерИзмНов(); ош != nil {
		return nil, мФмт.Errorf("КоордНов(): ОШИБКА при создании номера строки\n\t%v", ош)
	}
	if ош = _коорд.стр.Уст(пСтр); ош != nil {
		return nil, мФмт.Errorf("КоордНов(): ОШИБКА при создании номера строки\n\t%v", ош)
	}
	if _коорд.поз, ош = мСп.СтрПозИзмНов(); ош != nil {
		return nil, мФмт.Errorf("КоордНов(): ОШИБКА при создании позиции в строке\n\t%v", ош)
	}
	if ош = _коорд.поз.Уст(пПоз); ош != nil {
		return nil, мФмт.Errorf("КоордНов(): ОШИБКА при создании позиции в строке\n\t%v", ош)
	}
	return ки, nil
}

//String -- для соответствия интерфейсу Stringer
func (сам *тКоордИзм) String() string {
	return "*тКоордИзм{стр:" + мФмт.Sprintf("%v", сам.стр) + ", поз:" + мФмт.Sprintf("%v", сам.поз) + "}"
}

//СтрПоз -- возвращает ссылку на объект позицию встроке
func (сам *тКоордИзм) СтрПоз() мСп.ИСтрПозИзм {
	return сам.поз
}

//СтрНомер -- возвращает сылку на объект номера строки
func (сам *тКоордИзм) СтрНомер() мСн.ИСтрНомерИзм {
	return сам.стр
}
