// модИсходникСтроки
package пакИсходникСтроки

/*
Пакет предоставляет тип, который хранит построчно исходник.
К строке можно обратиться по номеру, или полностью получить массив строк
*/
import (
	пакКонс "../../../../пакКонсоль"
	//пакФмт "fmt"
	пакСтр "strings"
)

type TStrune []rune

type ТуИсхСтр struct {
	конс      *пакКонс.ТуКонсоль
	СтрСписок []string
}

func Новый() (исхСтр *ТуИсхСтр) {
	исхСтр = new(ТуИсхСтр)
	return исхСтр
}

func (сам *ТуИсхСтр) НаСтроки_Разбить(пИсх string) {
	сам.конс.Отладить("ТуИсхСтр.НаСтроки_Разбить()")
	сам.СтрСписок = пакСтр.Split(пИсх, "\n")

	for итер, стр := range сам.СтрСписок {
		if len(стр) > 1 {
			стр = стр[:len(стр)-1]
			сам.СтрСписок[итер] = стр
		}
		//сам.конс.Печать(пакФмт.Sprintf("%v: %v", итер, сам.СтрСписок[итер]))
	}
}

//Возвращает строку по указанному номеру
func (сам *ТуИсхСтр) Строка(пНомер int) (стр string) {
	if пНомер < 1 || пНомер > len(сам.СтрСписок) {
		panic("ТуИсхСтр.Строка(пНомер): пНомер за пределами разрешённого диапазона строк")
	}
	return сам.СтрСписок[пНомер-1]
}
