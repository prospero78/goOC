// модИсходникФайл
package пакИсходникФайл

/*
Пакет предоставляет тип для чтения файла и записи его же.
*/

import (
	пакКонс "../../../../пакКонсоль"
	пакОс "os"
	пакУтф "unicode/utf8"
)

type ТуИсхФайл struct {
	конс *пакКонс.ТуКонсоль
}

func Новый() (файл *ТуИсхФайл) {
	пакКонс.Конс.Отладить("пакИсхФайл.Новый()")
	файл = new(ТуИсхФайл)
	файл.конс = пакКонс.Конс
	return файл
}

func (сам *ТуИсхФайл) Считать(пИмяФайла string) {
	сам.конс.Отладить("ТуИсхФайл.Считать()")
	if пИмяФайла == "" {
		пИмяФайла = "Hello.o7"
	}
	файл, _ := пакОс.Open(пИмяФайла)
	defer файл.Close()
	// Размер файла в байтах
	размер, _ := файл.Stat()

	// Массив байт под размер текста
	текст := make([]byte, размер.Size())

	// Считали текст
	_, _ = файл.Read(текст)

	//Сколько занимает в рунах
	размер_руны := пакУтф.RuneCount(текст)

	// Массив по размеру рун
	текст_руны := make([]rune, размер_руны)
	//текст_руны, _ = пакУтф.DecodeRune(текст)
	индекс := 0
	for len(текст) > 0 {
		руна, цРазмер := пакУтф.DecodeRune(текст)
		текст_руны[индекс] = руна
		текст = текст[цРазмер:]
		индекс += 1
	}
	сам.конс.Отладить("####################################################")
	сам.конс.Отладить(string(текст_руны))
	сам.конс.Отладить("####################################################")
}
