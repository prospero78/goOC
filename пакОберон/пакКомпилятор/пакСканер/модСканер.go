// модСканер
package пакСканер

/*
	Предоставляет тип сканера для обработки текста на входе.
	Сканер служит для первичного сканирования текста.
	Он же проверяет правильность поступления слов из исходного текста.
*/

import (
	пакКонс "../../пакКонсоль"
	пакКонст "../пакСущность/пакКонстанта"
	пакОш "../пакСущность/пакОшибка"
	пакСлово "../пакСущность/пакСлово"
	пакИсх "./пакИсходник"
	пакФмт "fmt"
)

type ТуСканер struct {
	импорт []*пакСлово.ТуСлово
	конс   *пакКонс.ТуКонсоль
	Ош     *пакОш.ТуОшибка
	Импорт []*пакСлово.ТуСлово
	Конст  []*пакКонст.ТуКонстанта
	Исх    *пакИсх.ТуИсходник
}

func Новый() (сканер *ТуСканер, ош error) {
	пакКонс.Конс.Отладить("пакСканер.Новый")
	сканер = new(ТуСканер)
	сканер.Исх, ош = пакИсх.Новый()
	if ош != nil {
		ош = пакФмт.Errorf("ПакСканер.Новый(): ошибка при создании ТуИсходник\n\t%v", ош)
	}
	return сканер, ош
}

func (сам *ТуСканер) Обработать(пИмяФайла string) {
	сам.конс.Отладить("ТуСканер.Обработать()")
	сам.Исх.Обработать(пИмяФайла)
}
