package пакСканер

/*
	Предоставляет тип сканера для обработки текста на входе.
	Сканер служит для первичного сканирования текста.
	Он же проверяет правильность поступления слов из исходного текста.
*/

import (
	пакКонс "../../пакКонсоль"
	пакКонст "../пакСущность/пакКонстанта"
	пакОш "../пакСущность/пакОшибка"
	пакСлово "../пакСущность/пакСлово"
	пакИсх "./пакИсходник"
	пакФмт "fmt"
)

//ТСканер -- тип распознаёт слова в исходнике
type ТСканер struct {
	импорт []*пакСлово.ТСлово
	конс   *пакКонс.ТКонсоль
	Ош     *пакОш.ТОшибка
	Импорт []*пакСлово.ТСлово
	Конст  []*пакКонст.ТКонстанта
	Исх    *пакИсх.ТИсходник
}

//Новый -- возвращает ссылку на новый ТСканер
func Новый() (сканер *ТСканер, ош error) {
	пакКонс.Конс.Отладить("пакСканер.Новый")
	сканер = new(ТСканер)
	сканер.Исх, ош = пакИсх.Новый()
	if ош != nil {
		ош = пакФмт.Errorf("ПакСканер.Новый(): ошибка при создании ТуИсходник\n\t%v", ош)
	}
	return сканер, ош
}

//Обработать -- выполняет обработку исходника
func (сам *ТСканер) Обработать(пИмяФайла string) (ош error) {
	сам.конс.Отладить("ТСканер.Обработать()")
	if _ош := сам.Исх.Обработать(пИмяФайла); _ош != nil {
		ош = пакФмт.Errorf("ТСканер.Обработать(): ошибка при обработке исходника\n\t%v", _ош)
	}
	return ош
}
