package пакСканер

/*
	Предоставляет тип сканера для обработки текста на входе.
	Сканер служит для первичного сканирования текста.
	Он же проверяет правильность поступления слов из исходного текста.
*/

import (
	мКонс "../../пакКонсоль"
	мКонст "../пакСущность/пакКонстанта"
	мОш "../пакСущность/пакОшибка"
	мСлово "../пакСущность/пакСлово"
	мИсх "./пакИсходник"
	мФмт "fmt"
)

//ТСканер -- тип распознаёт слова в исходнике
type ТСканер struct {
	импорт []*мСлово.ТСлово
	Импорт []*мСлово.ТСлово
	Ош     *мОш.ТОшибка
	Конст  []*мКонст.ТКонстанта
	Исх    *мИсх.ТИсходник
}

//Новый -- возвращает ссылку на новый ТСканер
func Новый() (сканер *ТСканер, ош error) {
	мКонс.Конс.Отладить("пакСканер.Новый")
	сканер = new(ТСканер)
	if сканер.Исх, ош = мИсх.Новый(); ош != nil {
		return nil, мФмт.Errorf("ПакСканер.Новый(): ошибка при создании ТуИсходник\n\t%v", ош)
	}
	return сканер, nil
}

//Обработать -- выполняет обработку исходника
func (сам *ТСканер) Обработать(пИмяФайла string) (ош error) {
	мКонс.Конс.Отладить("ТСканер.Обработать()")
	if ош = сам.Исх.Обработать(пИмяФайла); ош != nil {
		return мФмт.Errorf("ТСканер.Обработать(): ошибка при обработке исходника\n\t%v", ош)
	}
	return nil
}
