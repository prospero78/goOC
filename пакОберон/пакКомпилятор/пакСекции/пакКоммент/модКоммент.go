// модКоммент
package пакКоммент

/*
Выделение комментариев необходимо для (возможного) дальнейшего анализа
комментариев на наличие опций компилятора.
Это псевдосекция.
*/

import (
	пакКонс "../../../пакКонсоль"
	пакСлово "../../пакСущность/пакСлово"
	"fmt"
)

type ТуКоммент struct {
	коммент []*пакСлово.ТуСлово
	модуль  []*пакСлово.ТуСлово
}

func Новый() (коммент *ТуКоммент, ош error) {
	пакКонс.Конс.Отладить("пакСекции.пакКоммент.Новый()")
	коммент = &ТуКоммент{}
	return коммент, ош
}

// Главный обработчик секции
func (сам *ТуКоммент) Обработать(пСловаМодуля []*пакСлово.ТуСлово) (ош error) {
	цНомерИсх, цУровень := 0, 0
	слКоммент := []*пакСлово.ТуСлово{}
	слМодуль := []*пакСлово.ТуСлово{}
	for цНомерИсх = 0; цНомерИсх < len(пСловаМодуля); цНомерИсх++ {
		слово := пСловаМодуля[цНомерИсх]
		if слово.Строка() == "(*" {
			цУровень++
		} else if слово.Строка() == "*)" {
			цУровень--
		}
		if цУровень == 0 && слово.Строка() != "*)" {
			слМодуль = append(слМодуль, слово)
		} else {
			слКоммент = append(слКоммент, слово)
		}
		цНомерИсх++
	}
	сам.коммент = слКоммент
	сам.модуль = слМодуль
	return ош
}

func main() {
	fmt.Println("Hello World!")
}
