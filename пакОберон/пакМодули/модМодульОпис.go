package пакМодули

/*
	Модуль предоставляет тип для описателя модулей.
	Потом ссылки на объекты этого типа хранятся в общем словаре глобального объекта модулей.
	Тип является частным и не экспортируется из пакета
*/
import (
	мИнт "../пакИнтерфейсы"
	мФмт "fmt"
)

//Описатель модуля
type тМодульОпис struct {
	имя мИнт.СМодульИмя //имя модуля устанавливается один раз только при создании
}

//Возвращает ссылку на новый тМодульОпис
func _МодульОписНов(пИмя мИнт.СМодульИмя) (модуль *тМодульОпис, ош error) {
	модуль = &тМодульОпис{}
	if модуль == nil {
		return nil, мФмт.Errorf("_МодульОписНов(): нет памяти на новый описатель модуля?\n")
	}
	if ош = модуль._ИмяУст(пИмя); ош != nil {
		return nil, мФмт.Errorf("_МодульОписНов(): ошибка при установке имени описателя модуля\n\t%v", ош)
	}
	return nil, мФмт.Errorf("_МодульОписНов(): доделать эту процедуру\n")
}

//Имя -- возвращает хранимое имя модуля
func (сам *тМодульОпис) Имя() мИнт.СМодульИмя {
	return сам.имя
}

func (сам *тМодульОпис) _ИмяУст(пИмя мИнт.СМодульИмя) (ош error) {
	if len(пИмя) == 0 {
		return мФмт.Errorf("тМодульОпис._ИмяУст(): пИмя не может быть пустым\n")
	}
	return мФмт.Errorf("тМодульОпис._ИмяУст(): TODO доделать проверку допустимости литер имени описателя модуля\n")
}
