package пакСтрПоз

/*
	Модуль предоставляет базовый тип для хранения фиксированной позиции в строке
*/

import (
	мФмт "fmt"
)

//ССтрПоз -- специальный целочисленный тип для хранения позиции в строке исходника
type ССтрПоз int

//ИСтрПозФикс -- интерфейс к операциям с фиксированной координатой
type ИСтрПозФикс interface {
	Получ() ССтрПоз
	String() string
}

//тСтрПозФикс -- тип для операций с фиксированной позицией в строке
type тСтрПозФикс struct {
	знач   ССтрПоз
	стрПоз string
}

//СтрПозФиксНов -- возвращает новый тСТрПозФикс
func СтрПозФиксНов(пПоз ССтрПоз) (поз ИСтрПозФикс, ош error) {
	_поз := тСтрПозФикс{}
	if ош = _поз._Уст(пПоз); ош != nil {
		return nil, мФмт.Errorf("СтрПозФиксНов(): ОШИБКА при установке значения\n\t%v", ош)
	}
	return &_поз, nil
}

//Возвращает значение позиции в строке
func (сам *тСтрПозФикс) Получ() ССтрПоз {
	return сам.знач
}

func (сам *тСтрПозФикс) String() string {
	return сам.стрПоз
}

//Одноразовая функция установки, блокировка местами есть на всякий случай, хот это и кривое решение
func (сам *тСтрПозФикс) _Уст(пПоз ССтрПоз) (ош error) {
	if пПоз < 0 {
		return мФмт.Errorf("тСтрПозФикс._Уст(): ОШИБКА пПоз(%v) меньше нуля\n", пПоз)
	}
	сам.знач = пПоз
	сам.стрПоз = мФмт.Sprint(пПоз)
	return nil
}
