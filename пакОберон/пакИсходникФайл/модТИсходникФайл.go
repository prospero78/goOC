package пакИсходникФайл

/*
	Модуль предоставляет тип для чтения файла и записи его же.
*/

import (
	мКонс "github.com/prospero78/goOC/пакОберон/пакКонсоль"
	//мОш "../../../пакСущность/пакОшибка"

	мФмт "fmt"
	мИнт "github.com/prospero78/goOC/пакОберон/пакИнтерфейсы"
	мВв "io/ioutil"
)

//ТИсхФайл -- тип для работы с исходным файлом
type ТИсхФайл struct {
	размер мИнт.СИсхРазмер //Размер исходника в рунах
	текст  мИнт.СИсхТекст
}

//ИсхФайлНов -- возвращает ссылку на новый ТИсхФайл
func ИсхФайлНов() (файл *ТИсхФайл, ош error) {
	мКонс.Конс.Отладить("пакИсхФайл.Новый()")
	файл = &ТИсхФайл{}
	if файл == nil {
		return nil, мФмт.Errorf("ИсхФайлНов(): нет памяти?\n")
	}

	return файл, nil
}

//Считать -- читает исходный файл
func (сам *ТИсхФайл) Считать(пИмяФайла мИнт.СИсхФайл) (ош error) {
	мКонс.Конс.Отладить("ТИсхФайл.Считать()")
	if пИмяФайла == "" {
		пИмяФайла = "Hello.o7"
	}
	байты, ош := мВв.ReadFile(string(пИмяФайла))
	if ош != nil {
		return мФмт.Errorf("ТИсхФайл.Считать(): ошибки при попытке прочитать файл\n\t%v", ош)
	}

	// Строковое представление байтов
	сам.текст = мИнт.СИсхТекст(string(байты))

	сам.размер = мИнт.СИсхРазмер(len([]rune(сам.текст)))
	//мФмт.Printf("Текст:\n%v\nДлина: %v\n", сам.текст, сам.размер)
	return nil
}

//Лит -- Возвращает литеру по номеру руны
func (сам *ТИсхФайл) Лит(пПоз мИнт.СЛитНомер) (лит мИнт.СЛит, ош error) {
	if пПоз < 0 {
		return "", мФмт.Errorf("ТИсхФайл.Лит(): указатель литеры пПоз не может быть < 0\n")
	}
	if мИнт.СИсхРазмер(пПоз) > сам.размер-1 {
		return "", мФмт.Errorf("ТИсхФайл.Лит(): указатель литеры пПоз больше последней литеры, пПоз=%v, размер=[%v]\n", пПоз, сам.размер)
	}
	текст := []rune(сам.текст)
	лит = мИнт.СЛит(string(текст[пПоз]))
	return лит, nil
}

//Исходник -- возвращает полностью исходный текст в отдельном срезе рун
func (сам *ТИсхФайл) Исходник() (текст мИнт.СИсхТекст) {
	return сам.текст
}

//ИсхПечать -- печатает исходный файл
func (сам *ТИсхФайл) ИсхПечать() {
	мКонс.Конс.Печать(string(сам.текст))
}

//Размер -- возвращает размер исходника в рунах
func (сам *ТИсхФайл) Размер() мИнт.СИсхРазмер {
	return сам.размер
}
