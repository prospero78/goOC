package пакСтрНомер

/*
	Модуль предоставляет тип для операций с номером строки.
*/

import (
	мФмт "fmt"
)

//ССтрНомер -- специальный целочисленный тип для хранения номера строки исходника
type ССтрНомер int

//ИСтрНомерФикс -- интерфейс для операций с типом номера строки исходника
type ИСтрНомерФикс interface {
	Получ() ССтрНомер
	String() string
}

//тСтрНомерФикс -- тип для операций с фиксированным номером строки
type тСтрНомерФикс struct {
	знач     ССтрНомер
	стрНомер string
}

//СтрНомерФиксНов -- возвращает ссылку на новый ИСтрНомерФикс
func СтрНомерФиксНов(пСтр ССтрНомер) (номер ИСтрНомерФикс, ош error) {
	_номер := тСтрНомерФикс{}
	if ош = _номер._Уст(пСтр); ош != nil {
		return nil, мФмт.Errorf("СтрНомерФиксНов(): ОШИБКА в присвоении номера строки\n\t%v", ош)
	}
	return &_номер, nil
}

//Потокобезопасная установка значения номера строки
func (сам *тСтрНомерФикс) _Уст(пНомер ССтрНомер) (ош error) {
	if пНомер <= 0 {
		return мФмт.Errorf("тСтрНомерФикс.Уст(): ОШИБКА значение меньше 1, пНомер=[%v]\n", пНомер)
	}
	сам.знач = пНомер
	сам.стрНомер = мФмт.Sprintf("%v", пНомер)
	return nil
}

//Знач -- возвращает хранимое значение номера строки
func (сам *тСтрНомерФикс) Получ() ССтрНомер {
	return сам.знач
}

func (сам *тСтрНомерФикс) String() string {
	return сам.стрНомер
}
