package пакОберон

/*
	Пакет предоставляет тип компилятора Оберона для главного файла
*/

import (
	пакКомпилятор "./пакКомпилятор"
	пакКонс "./пакКонсоль"
	пакФмт "fmt"
)

//ТуОберон -- предоставляет тип компилятора для запускающей процедуры
type ТуОберон struct {
	компилятор *пакКомпилятор.ТуКомпилятор
	конс       *пакКонс.ТуКонсоль
}

//Новый -- создаёт новый экземпляр компилятора
func Новый() (оберон *ТуОберон, ош error) {
	пакКонс.Конс.Отладить("пакОберон.Новый()")
	оберон = new(ТуОберон)

	if оберон.компилятор, ош = пакКомпилятор.Новый(); ош != nil {
		ош = пакФмт.Errorf("пакОберон.Новый(): ошибка при создании ТуКомпилятор\n\t%v", ош)
		return nil, ош
	}
	оберон.конс = пакКонс.Конс
	return оберон, nil
}

//Обработать -- начинает обработку предлагаемого модуля
func (сам *ТуОберон) Обработать() (ош error) {
	сам.конс.ШапкаПечать()
	var стрИмяФайла = "Hello.o7"
	if _ош := сам.компилятор.Обработать(стрИмяФайла); _ош != nil {
		ош = пакФмт.Errorf("ТуОберон.Обработать(): ошибка при работе компилятора\n\t%v", _ош)
		return ош
	}
	return nil
}
