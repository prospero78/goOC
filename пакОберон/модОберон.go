package пакОберон

/*
	Модуль предоставляет тип компилятора Оберона для главного файла
*/

import (
	мФмт "fmt"
	мИнт "github.com/prospero78/goOC/пакОберон/пакИнтерфейсы"
	мКомп "github.com/prospero78/goOC/пакОберон/пакКомпилятор"
	мКонс "github.com/prospero78/goOC/пакОберон/пакКонсоль"
)

//ТОберон -- предоставляет тип компилятора для запускающей процедуры
type ТОберон struct {
	компилятор мИнт.ИКомпилятор
}

//ОберонНов -- создаёт новый экземпляр компилятора
func ОберонНов() (оберон *ТОберон, ош error) {
	мКонс.Конс.Отладить("ОберонНов()")
	оберон = &ТОберон{}

	if оберон.компилятор, ош = мКомп.КомпиляторНов(); ош != nil {
		ош = мФмт.Errorf("ОберонНов(): ошибка при создании ТКомпилятор\n\t%v", ош)
		return nil, ош
	}
	return оберон, nil
}

//Обработать -- начинает обработку предлагаемого модуля
func (сам *ТОберон) Обработать() (ош error) {
	мКонс.Конс.ШапкаПечать()
	var стрИмяФайла = мИнт.СИсхФайл("Hello.o7")
	if ош = сам.компилятор.Обработать(стрИмяФайла); ош != nil {
		return мФмт.Errorf("ТОберон.Обработать(): ошибка при работе компилятора\n\t%v", ош)
	}
	return nil
}
