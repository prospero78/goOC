package app

/*
	Модуль предоставляет тип Оберон-компилятора.
	Здесь начинается вся работа.
*/

import (
	мМод "oc/internal/app/module"
	мПарам "oc/internal/app/param"
	мЛог "oc/internal/log"
)

//ТОк -- Оберон-компилятор (главный тип приложения)
type ТОк struct {
	лог   *мЛог.ТЛог
	режим int //Режим работы компилятора
}

//Нов -- взвращает указатель на новый ТОк
func Нов(парам *мПарам.ТПарам) (ок *ТОк, ош error) {
	_ок := ТОк{
		лог:   мЛог.Нов("ТОк", парам.Режим),
		режим: парам.Режим,
	}
	_ок.лог.Отладка("Нов", "Создание типа компилятора")
	return &_ок, nil
}

//Пуск -- запуск компилтора после создания объекта компилятора
func (сам *ТОк) Пуск() {
	сам.лог.Отладка("Пуск", "")
	имяФайла := "Hello.o7"
	модуль, ош := мМод.Нов(имяФайла, сам.режим)
	if ош != nil {
		сам.лог.Паника("Пуск", "обработка модуля", ош)
	}
	_ = модуль.КодПолуч()
}
