package пакИсхСтрока

/*
	Модуль предоставляет тест для типа исходной строки
*/

import (
	мТест "testing"
)

const (
	цНом      = 1
	стрСтрока = "МОДУЛЬ Тест;"
)

var (
	строка ИИсхСтрока
	ош     error
)

func TestИсхСтрока(тест *мТест.T) {
	_Позитив := func() {
		{ //1 Создание исходной строки
			тест.Logf("п1 Создание исходной строки\n")
			if строка, ош = ИсхСтрокаНов(цНом, стрСтрока); ош != nil {
				тест.Errorf("п1.1 ОШИБКА при создании исходной строки\n\t%v", ош)
			}
			if строка == nil {
				тест.Errorf("п1.2 ОШИБКА строка не должна быть nil\n")
			}
		}
		{ //2 Проверка начальных значений
			тест.Logf("п2 Проверка начальных значений\n")
			if строка.Строка() != стрСтрока {
				тест.Errorf("п2.1 ОШИБКА при хранении исходной строки(%v), знач=[%v]\n", стрСтрока, строка.Строка())
			}
			if строка.Номер() != цНом {
				тест.Errorf("п2.2 ОШИБКА при хранении номера исходной строки(%v), знач=[%v]\n", цНом, строка.Номер())
			}
		}
	}
	_Негатив := func() {
		{ //1 Создание строки с пустой строкой
			тест.Logf("н1 Создание исходной строки с пустой строкой\n")
			if строка, ош = ИсхСтрокаНов(цНом, ""); ош == nil {
				тест.Errorf("н1.1 ОШИБКА при создании исходной строки с пустой строкой\n")
			}
			if строка != nil {
				тест.Errorf("н1.2 ОШИБКА строка должна быть nil\n")
			}
		}
		{ //2 Создание строки с пустым номером
			тест.Logf("н1 Создание исходной строки с пустым номером\n")
			if строка, ош = ИсхСтрокаНов(0, стрСтрока); ош == nil {
				тест.Errorf("н2.1 ОШИБКА при создании исходной строки с пустым номером\n")
			}
			if строка != nil {
				тест.Errorf("н2.2 ОШИБКА строка должна быть nil\n")
			}
		}
	}
	_Позитив()
	_Негатив()
}
