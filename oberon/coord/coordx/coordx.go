package coordx

/*
	Модуль предоставляет тип для операций с позицией в строке исходника
*/

import (
	мФмт "fmt"
	мСинх "sync"
)

//ТСтрПоз -- тип для операций с позицией в строке исходника
type ТСтрПоз struct {
	блок   мСинх.RWMutex
	знач   int
	стрПоз string
}

//СтрПозНов -- возвращает ссылку на ТСтрПоз
func СтрПозНов(пПоз int) (поз *ТСтрПоз) {
	_поз := ТСтрПоз{}
	_поз.Уст(пПоз)
	return &_поз
}

//Доб -- добавляет +1 к значению позиции строки
func (сам *ТСтрПоз) Доб() {
	defer сам.блок.Unlock()
	сам.блок.Lock()
	сам.знач++
	сам.стрПоз = мФмт.Sprint(сам.знач)
}

//Сброс -- сбрасывает значение позиции строки
func (сам *ТСтрПоз) Сброс() {
	defer сам.блок.Unlock()
	сам.блок.Lock()
	сам.знач = 0
	сам.стрПоз = "0"
}

//Получ -- возвращает значение позиции в строке
func (сам *ТСтрПоз) Получ() int {
	defer сам.блок.RUnlock()
	сам.блок.RLock()
	return сам.знач
}

func (сам *ТСтрПоз) String() string {
	defer сам.блок.RUnlock()
	сам.блок.RLock()
	return сам.стрПоз
}

//Уст -- установка значения позиции строки
func (сам *ТСтрПоз) Уст(пПоз int) {
	defer сам.блок.Unlock()
	сам.блок.Lock()
	if пПоз < 0 {
		panic(мФмт.Errorf("ТСтрПоз.Уст(): ОШИБКА значение меньше (0), пПоз=[%v]\n", пПоз))
	}
	сам.знач = пПоз
	сам.стрПоз = мФмт.Sprint(пПоз)
}
