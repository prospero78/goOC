МОДУЛЬ _Test;
(* это комментарий можно пропустить.
	(* а это вообще вложенный комментарий *)   *)

ИМПОРТ Test,
	mTask := pakSys.modTask,
	мЧт := modAss, mTs := pakJob.modTask,
	Constante;

CONST  (* в оригинале -- константы разделяются точка с запятой *)
	цСчёт = 1;
	вСреднее* = 12.899;
	стрСообщ = "Проверка";
	стрОш = "Ошибка в определении типа";
	цЯблоки* = (цСчёт+10-4/0.28)*5; (* специально слепленные цифры и знаки для теста *)

TYPE
	tInt32 = INTEGER;

	tpBigInt* = POINTER TO INTEGER;

	tpInt300 = POINTER TO tInt32;

	SetCompilerFlagProc* = PROCEDURE(VAR pragma, tiles, block: ARRAY OF CHAR);
	NotifyErrorProc* = PROCEDURE(pos: INTEGER; msg: ARRAY OF CHAR):REAL;
	NoErrorProc = PROCEDURE(msg: ARRAY OF мЧт.тСтр):BOOLEAN;

	тСтрока = ARRAY 201 OF CHAR;

	тТекст* = ARRAY 255, 84 OF тСтрока;

	тЗапПусто = RECORD END;

	тЗапПредок* = RECORD(тЗапПусто) END;

	тЗапПредок2 = POINTER TO тЗапПредок;

	тЗвено* = RECORD (тСписок)
		цНомер* : INTEGER;
		бЕсть   : BOOLEAN;
		лНазван : ARRAY 2, 63 OF CHAR;
		лГлава* : ARRAY 2, 63 OF тСтрока;
		уЗвСлед : tpInt32
	END;

	туТекст* = POINTER TO RECORD (мЧт.тСтрока)
		мСтр : ARRAY 1024 OF тСтрока;
		цПоз : INTEGER;
		лЛит : мБуф.тБуф;
		зЛуч : RECORD
			вАзимут    : REAL;
			вСклонение : REAL;
			цПоток*     : INTEGER;
			зЛуч2* : RECORD
				вАзимут2*    : REAL;
				нСклонение2 : SET;
				лПоток2     : ARRAY 2, 63 OF CHAR;
			END;
		END;
	END;

VAR
	a : INTEGER;
	b: tInt32;
	c: INTEGER;
	d: мБуф.тБуф;
	des: ARRAY 22, 45 OF мЧт.тБуф;
	des2*: RECORD
		цПоз*: INTEGER;
		вДробь: REAL;
		сИмя: ARRAY 255 OF CHAR;
		зЛуч*: RECORD (* Проверка на переносимость комментариев *)
			цЛуч1*: INTEGER;
			цЛуч2: tInt32
		END;
	END;

PROCEDURE Test(st, al :REAL; VAR zt:INTEGER):мЧт.Буф;
	CONST
		dres = 5;
		tres = 3;
	TYPE
		tpBuf = POINTER TO мЧт.тБуф;
		tBuffer = RECORD
			iPos: INTEGER;
			sRate: CHAR
		END;
	VAR
		dlt: INTEGER;
		dll: мЧт.тБуф;
		бПривет: BOOLEAN;
	PROCEDURE Cargo(VAR st, al :REAL; zt:INTEGER);
		BEGIN
			(* ещё немного разных тегов для более большой разницы с чистыми тегами *)
			st := al * 2;
			zt := FLOOR(st) + 253;
			Test
		END Cargo;

	BEGIN
		(* ещё1 немного2 разных3 тегов4 для5 более6 большой7 разницы8 с9 чистыми0 тегами@ *)
		st := al * 2;
		Cargo;
		zt := FLOOR(st) + 253
	END Test;

PROCEDURE Init*(VAR st, al :REAL; zt:INTEGER);
	BEGIN
		(* ещё немного разных тегов для более большой разницы с чистыми тегами *)
		st := al * 2;
		zt := FLOOR(st) + 253;
		Test
	END Init;

BEGIN
	a := 5
КОНЕЦ _Test.

А это текст за концом модуля, который тупо игнорируется. Ха-ха-ха!))
Здесь можно писать всё, что угодно.
