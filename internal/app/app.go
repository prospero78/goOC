package app

/*
	Модуль предоставляет тип Оберон-компилятора.
	Здесь начинается вся работа.
*/

import (
	"oc/internal/app/module"
	"oc/internal/app/param"
	"oc/internal/log"
)

//TOc -- Оберон-компилятор (главный тип приложения)
type TOc struct {
	log  *log.ТЛог
	mode int //Режим работы компилятора
}

//New -- взвращает указатель на новый ТОк
func New(парам *мПарам.ТПарам) (ok *TOc, err error) {
	_ок := TOc{
		log:  log.Нов("ТОк", парам.Режим),
		mode: парам.Режим,
	}
	_ок.log.Отладка("Нов", "Создание типа компилятора")
	return &_ок, nil
}

//Пуск -- запуск компилтора после создания объекта компилятора
func (сам *TOc) Пуск() {
	сам.log.Отладка("Пуск")
	имяФайла := "Hello.o7"
	модуль, ош := мМод.Нов(имяФайла, сам.mode)
	if ош != nil {
		сам.log.Паника("Пуск", "обработка модуля", ош)
	}
	_ = модуль.КодПолуч()
}
