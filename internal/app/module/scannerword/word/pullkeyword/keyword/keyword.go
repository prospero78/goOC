package keyword

/*
	Модуль предоставляет тип для ключевого слова. У ключевого слова может быть множество алиасов
	на разных языках.
*/

import (
	"fmt"
	мТип "oc/internal/types"
)

//ТКлюч -- операции с ключевым словом и его алиасамми
type ТКлюч struct {
	пулАлиасы []мТип.ССловоКлюч
}

//Нов -- возвращает указатель на новый ТКлюч
func Нов(пКлюч мТип.ССловоКлюч, пАлиас ...мТип.ССловоКлюч) (ключ *ТКлюч, ош error) {
	{ //Предусловия
		if пКлюч == "" {
			return nil, fmt.Errorf("keyword.go/Нов(): ОШИБКА пКлюч==''\n")
		}
	}
	_ключ := ТКлюч{
		пулАлиасы: make([]мТип.ССловоКлюч, 0),
	}
	_ключ.пулАлиасы = append(_ключ.пулАлиасы, пКлюч)
	for _, алиас := range пАлиас {
		_ключ.пулАлиасы = append(_ключ.пулАлиасы, алиас)
	}
	return &_ключ, nil
}

func (сам *ТКлюч) КлючНайти(пКлюч мТип.ССловоКлюч) bool {
	for _, ключ := range сам.пулАлиасы {
		if ключ == пКлюч {
			return true
		}
	}
	return false
}
