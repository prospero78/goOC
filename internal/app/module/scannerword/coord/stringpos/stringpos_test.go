package stringpos

/*
	Модуль предоставляет тест для позиции в строке исходника
*/

import (
	мФмт "fmt"
	мТип "oc/internal/types"
	мТест "testing"
)

var (
	поз *ТСтрокаПоз
	ош  error
	ок  bool
)

func TestПозСтрИзм(тест *мТест.T) {
	_Позитив := func() {
		_Проверить := func(пЗнач мТип.ССтрокаПоз) {
			тест.Logf("п2 Проверка начальных значений\n")
			if поз.Получ() != пЗнач {
				тест.Errorf("п2.1 ОШИБКА при хранении начального значения(%v), знач=%v\n", пЗнач, поз)
			}
			if поз.String() != мФмт.Sprint(пЗнач) {
				тест.Errorf("п2.2 ОШИБКА при хранении строкового значения(%v), знач=%s", пЗнач, поз)
			}
		}
		_Создать := func() {
			тест.Logf("п1 Создание изменяемой позиции в строке\n")
			if поз, ош = Нов(10); ош != nil {
				тест.Errorf("п1.1 ОШИБКА ош!=nil\n\t%v", ош)
			}
			if поз == nil {
				тест.Errorf("п1.1 ОШИБКА поз не может быть nil\n")
			}
			_Проверить(10)
		}
		_Уст := func() {
			поз.Уст(11)
			_Проверить(11)
		}
		_Создать()
		_Уст()
		{ //3 Установка значения

			if поз.Получ() != 11 {
				тест.Errorf("п3.2 ОШИБКА поз строки должен быть 11, знач=[%v]\n", поз.Получ())
			}
			if поз.String() != "11" {
				тест.Errorf("п3.3 ОШИБКА строковое представление поз в строке должен быть (11), стр=[%v]\n", поз)
			}

		}
		{ //4 Добавление значения
			тест.Logf("п4 Добавление значения\n")
			поз.Доб()
			if поз.Получ() != 12 {
				тест.Errorf("п4.4 ОШИБКА поз строки должен быть 12, знач=[%v]\n", поз.Получ())
			}
			if поз.String() != "12" {
				тест.Errorf("п4.5 ОШИБКА строковое представление поз в строке должен быть (12), стр=[%v]\n", поз)
			}
		}
		{ //5 Сброс позиции
			тест.Logf("п5 Сброс позиции в строке\n")
			поз.Сброс()
			if поз.Получ() != 0 {
				тест.Errorf("п5.1 ОШИБКА позиция в строке должен быть 0, знач=[%v]\n", поз.Получ())
			}
			if поз.String() != "0" {
				тест.Errorf("п5.2 ОШИБКА строковое представление позиции в строке должен быть (0), стр=[%v]\n", поз)
			}
		}

	}
	_Негатив := func() {
		{ //1 Создание изменяемой координаты с отрицаительным значением
			тест.Logf("1 Создание изменяемой координаты с отрицательным значением\n")
			if поз, ош = Нов(-1); ош == nil {
				тест.Errorf("н1.2 ОШИБКА ош==nil\n")
			}
			if поз != nil {
				тест.Errorf("н1.2 ОШИБКА поз должен быть nil\n")
			}
		}
	}
	_Позитив()
	_Негатив()
}
