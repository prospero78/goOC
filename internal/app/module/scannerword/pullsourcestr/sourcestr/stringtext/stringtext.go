package stringtext

/*
	Модуль предоставляет тип для безопасного хранения
	строки исходного кода
*/

import (
	"fmt"
	мТип "oc/internal/types"
)

//ТСтрока -- тип для хранения строки исходного кода
type ТСтрока struct {
	знач мТип.UStringSource
}

//Нов -- возвращает ссылку на новый ТСтрока
func Нов(пСтр мТип.UStringSource) (стр *ТСтрока, ош error) {
	_стр := ТСтрока{}
	if ош = _стр._Уст(пСтр); ош != nil {
		return nil, fmt.Errorf("stringtext.go/Нов(): ERROR при установке  начального значения строки\n\t%v", ош)
	}
	return &_стр, nil
}

//Получ -- возвращает хранимое значение строки исходника ТСтрока
func (сам *ТСтрока) Получ() мТип.UStringSource {
	return сам.знач
}

//_Уст -- однократно устанавливает хранимое значение строки исходника ТСтрока
func (сам *ТСтрока) _Уст(пСтр мТип.UStringSource) (ош error) {
	if пСтр == "" {
		return fmt.Errorf("ТСтрока._Уст(): ERROR пСтр не может быть строкой\n")
	}
	сам.знач = пСтр
	return nil
}
