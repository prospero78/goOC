package stringnum

/*
	Модуль предоставляет потокобезопасный тип для операций с номером строки.
*/

import (
	"fmt"
	мТип "oc/internal/types"
)

//ТСтрокаНом -- тип для операций с номером строки
type ТСтрокаНом struct {
	знач мТип.UStringNum
}

//Нов -- возвращает указатель  на новый ТСтрокаНом
func Нов(пНомер мТип.UStringNum) (номер *ТСтрокаНом, ош error) {
	_номер := ТСтрокаНом{}
	if ош = _номер.Уст(пНомер); ош != nil {
		return nil, fmt.Errorf("stringnum.go/Нов(): ОШИБКА при присвоении номера исходной строки\n\t%v", ош)
	}
	return &_номер, nil
}

//Уст -- однократная установка значения номера строки
func (сам *ТСтрокаНом) Уст(пНомер мТип.UStringNum) (ош error) {
	if пНомер <= 0 {
		return fmt.Errorf("ТСтрокаНом.Уст(): ОШИБКА значение меньше 1, пНомер=[%v]\n", пНомер)
	}
	сам.знач = пНомер
	return nil
}

//Получ -- возвращает хранимое значение номера строки
func (сам *ТСтрокаНом) Получ() мТип.UStringNum {
	return сам.знач
}

//String -- возвращает строковое представление номера строки
func (сам *ТСтрокаНом) String() string {
	return fmt.Sprint(сам.знач)
}

//Доб -- увеличивает номер строки на +1
func (сам *ТСтрокаНом) Доб() {
	сам.знач++
}

//Сброс -- сбрасывает значение в "1"
func (сам *ТСтрокаНом) Сброс() {
	сам.знач = 1
}
