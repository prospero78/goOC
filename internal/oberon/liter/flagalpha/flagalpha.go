package flagalpha

/*
	Модуль предоставляет тип для хранения флага литеры "буква"
*/

import (
	мСтр "strings"
	мСинх "sync"
)

const (
	//наборы букв для перебора
	_СтрБуквыРус = "абвгдеёжзийклмнопрстуфхцчшщьыъэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЬЫЪЭЮЯ"
	_СтрБуквыАнг = "abcdefghjiklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	кСтрБуквыВсе = _СтрБуквыРус + _СтрБуквыАнг
)

//ТФлагБуква -- устанавливает флаг литеры, что это буква
type ТФлагБуква struct {
	знач bool
	блок мСинх.RWMutex
}

//ФлагБукваНов -- возвращает указатель на новый ТФлагБуква
func ФлагБукваНов() (флаг *ТФлагБуква) {
	_флаг := ТФлагБуква{}
	return &_флаг
}

//Получ -- возвращает значение флага
func (сам *ТФлагБуква) Получ() bool {
	defer сам.блок.RUnlock()
	сам.блок.RLock()
	return сам.знач
}

//Провер -- проверяет литеру на признак буквы
func (сам *ТФлагБуква) Провер(пЛит rune) bool {
	defer сам.блок.Unlock()
	сам.блок.Lock()
	сам.знач = false
	if мСтр.Contains(кСтрБуквыВсе, string(пЛит)) {
		сам.знач = true
	}
	return сам.знач
}
